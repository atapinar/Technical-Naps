name: Daily Stock Sentiment Report

on:
  schedule:
    - cron: '0 19 * * 1-5' # Runs at 19:00 UTC on weekdays (Monday-Friday)
  workflow_dispatch: # Allows manual triggering from the Actions tab
    inputs:
      force_run: # Optional: add an input to override the variable for a manual run
        description: 'Force run even if RUN_DAILY_REPORT is false?'
        required: false
        type: boolean
        default: false

jobs:
  send_report:
    # Condition:
    # 1. If it's a scheduled run, respect the RUN_DAILY_REPORT variable.
    # 2. If it's a workflow_dispatch (manual run):
    #    a. If force_run input is true, run it.
    #    b. Else, respect the RUN_DAILY_REPORT variable.
    if: |
      (github.event_name == 'schedule' && vars.RUN_DAILY_REPORT == 'true') ||
      (github.event_name == 'workflow_dispatch' && (
        github.event.inputs.force_run == true ||
        (github.event.inputs.force_run == false && vars.RUN_DAILY_REPORT == 'true')
      ))
    # A simpler version if you always want manual runs to respect the variable unless forced:
    # if: vars.RUN_DAILY_REPORT == 'true' || (github.event_name == 'workflow_dispatch' && github.event.inputs.force_run == 'true')

    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run Telegram Reporter Script
        env:
          REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
          REDDIT_CLIENT_SECRET: ${{ secrets.REDDIT_CLIENT_SECRET }}
          REDDIT_USER_AGENT: ${{ secrets.REDDIT_USER_AGENT }}
          POLYGON_API_KEY: ${{ secrets.POLYGON_API_KEY }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          XAI_API_KEY: ${{ secrets.XAI_API_KEY }}
          QUANDL_API_KEY: ${{ secrets.QUANDL_API_KEY }}
          SYMBOLS_TO_ANALYZE: ${{ secrets.SYMBOLS_TO_ANALYZE || 'TSLA,PLTR,RKLB' }}
          SENTIMENT_HISTORY_DAYS: ${{ secrets.SENTIMENT_HISTORY_DAYS || '7' }}
          HISTORICAL_POST_FETCH_LIMIT: ${{ secrets.HISTORICAL_POST_FETCH_LIMIT || '100' }}
          STOCK_DATA_LOOKBACK_DAYS: ${{ secrets.STOCK_DATA_LOOKBACK_DAYS || '90' }}
          ENABLE_GROK_SUMMARY: ${{ secrets.ENABLE_GROK_SUMMARY || 'True' }}
        run: python telegram_reporter.py
